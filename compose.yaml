
# Use "docker-compose up --abort-on-container-exit" to stop all containers when one container stops (when script ran through)
services:
  selenium:
    healthcheck: # depends_on uses this healthcheck to determine if the service is ready (chatgpt generated it and it seems to work)
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4444/wd/hub/status"]
      interval: 10s
      timeout: 5s
      retries: 5
    image: selenium/standalone-chrome
    ports:
    - 4444:4444
  brockertracker:
    depends_on: # wait for the selenium service to be ready before starting this service
      selenium: 
        condition: service_healthy
    image: brokertracker:3
    volumes:
      - type: bind # mount the volume from the host machine
        source: ./brokerTrackerData # path on host machine --> relative to this compose.yml file
        target: /app/data # path inside container
    build:
      context: .